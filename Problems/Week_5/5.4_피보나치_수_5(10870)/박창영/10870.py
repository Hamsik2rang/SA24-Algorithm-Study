# 백준 10870 - 피보나치 수 5(다이나믹 프로그래밍)
# 문제
# 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 
# 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.

# 이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다.
# n=17일때 까지 피보나치 수를 써보면 다음과 같다.
# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597

# n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 n이 주어진다. n은 20보다 작거나 같은 자연수 또는 0이다.

# 출력
# 첫째 줄에 n번째 피보나치 수를 출력한다.

# 예제 입력 1 
# 10
# 예제 출력 1 
# 55

# ----------------------------------------------------------------
# 함수 이용하기
def fin(n) :
    a1 = 0 # 피보나치의 0번째 인덱스의 값은 0임
    b1 = 1 # 피보나치의 1번째 인덱스의 값은 1임
    sum = 0

    if n == 0: # n이 0일 경우 그대로 a1값 출력
        sum = a1

    elif n == 1: # n이 1일 경우 그대로 b1값 출력
        sum = b1

    else: 
        # n이 2 이상일 경우 아래 코드를 통해 n값에 해당하는 sum값을 구함
        i = 2 # 인덱스가 2일 때부터이므로 i = 2로 초기화
        while(i <= n):
            sum = a1 + b1
            a1 = b1
            b1 = sum
            i += 1
    
    return sum

# n 입력
n = int(input())
# 값 출력
print(fin(n))